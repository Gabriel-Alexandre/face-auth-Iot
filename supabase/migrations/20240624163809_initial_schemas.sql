create type "public"."Error_Log_Type" as enum ('AUTHENTICATION_FAILED', 'TIMEOUT', 'OTHERS');

create table "public"."group" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" character varying not null,
    "status" integer not null,
    "creator_user" uuid not null
);


alter table "public"."group" enable row level security;

create table "public"."group_users" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "group_id" uuid not null,
    "user_id" uuid not null,
    "status" integer not null,
    "is_banned" integer,
    "is_enable" integer
);


alter table "public"."group_users" enable row level security;

create table "public"."log" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "group_id" uuid not null,
    "erro_type" "Error_Log_Type" not null,
    "status" integer not null
);


alter table "public"."log" enable row level security;

create table "public"."user" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" character varying not null,
    "email" character varying not null,
    "phone" character varying,
    "date_birth" timestamp with time zone,
    "image_url" text,
    "user_supabase_id" uuid not null
);


alter table "public"."user" enable row level security;

CREATE UNIQUE INDEX group_name_key ON public."group" USING btree (name);

CREATE UNIQUE INDEX group_pkey ON public."group" USING btree (id);

CREATE UNIQUE INDEX group_users_pkey ON public.group_users USING btree (id);

CREATE UNIQUE INDEX log_pkey ON public.log USING btree (id);

CREATE UNIQUE INDEX user_email_key ON public."user" USING btree (email);

CREATE UNIQUE INDEX user_pkey ON public."user" USING btree (id);

alter table "public"."group" add constraint "group_pkey" PRIMARY KEY using index "group_pkey";

alter table "public"."group_users" add constraint "group_users_pkey" PRIMARY KEY using index "group_users_pkey";

alter table "public"."log" add constraint "log_pkey" PRIMARY KEY using index "log_pkey";

alter table "public"."user" add constraint "user_pkey" PRIMARY KEY using index "user_pkey";

alter table "public"."group" add constraint "group_name_key" UNIQUE using index "group_name_key";

alter table "public"."group" add constraint "public_group_creator_user_fkey" FOREIGN KEY (creator_user) REFERENCES "user"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."group" validate constraint "public_group_creator_user_fkey";

alter table "public"."group_users" add constraint "public_group_users_group_id_fkey" FOREIGN KEY (group_id) REFERENCES "group"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."group_users" validate constraint "public_group_users_group_id_fkey";

alter table "public"."group_users" add constraint "public_group_users_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."group_users" validate constraint "public_group_users_user_id_fkey";

alter table "public"."log" add constraint "public_log_group_id_fkey" FOREIGN KEY (group_id) REFERENCES "group"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."log" validate constraint "public_log_group_id_fkey";

alter table "public"."log" add constraint "public_log_user_id_fkey" FOREIGN KEY (user_id) REFERENCES "user"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."log" validate constraint "public_log_user_id_fkey";

alter table "public"."user" add constraint "public_user_user_supabase_id_fkey" FOREIGN KEY (user_supabase_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user" validate constraint "public_user_user_supabase_id_fkey";

alter table "public"."user" add constraint "user_email_key" UNIQUE using index "user_email_key";

grant delete on table "public"."group" to "anon";

grant insert on table "public"."group" to "anon";

grant references on table "public"."group" to "anon";

grant select on table "public"."group" to "anon";

grant trigger on table "public"."group" to "anon";

grant truncate on table "public"."group" to "anon";

grant update on table "public"."group" to "anon";

grant delete on table "public"."group" to "authenticated";

grant insert on table "public"."group" to "authenticated";

grant references on table "public"."group" to "authenticated";

grant select on table "public"."group" to "authenticated";

grant trigger on table "public"."group" to "authenticated";

grant truncate on table "public"."group" to "authenticated";

grant update on table "public"."group" to "authenticated";

grant delete on table "public"."group" to "service_role";

grant insert on table "public"."group" to "service_role";

grant references on table "public"."group" to "service_role";

grant select on table "public"."group" to "service_role";

grant trigger on table "public"."group" to "service_role";

grant truncate on table "public"."group" to "service_role";

grant update on table "public"."group" to "service_role";

grant delete on table "public"."group_users" to "anon";

grant insert on table "public"."group_users" to "anon";

grant references on table "public"."group_users" to "anon";

grant select on table "public"."group_users" to "anon";

grant trigger on table "public"."group_users" to "anon";

grant truncate on table "public"."group_users" to "anon";

grant update on table "public"."group_users" to "anon";

grant delete on table "public"."group_users" to "authenticated";

grant insert on table "public"."group_users" to "authenticated";

grant references on table "public"."group_users" to "authenticated";

grant select on table "public"."group_users" to "authenticated";

grant trigger on table "public"."group_users" to "authenticated";

grant truncate on table "public"."group_users" to "authenticated";

grant update on table "public"."group_users" to "authenticated";

grant delete on table "public"."group_users" to "service_role";

grant insert on table "public"."group_users" to "service_role";

grant references on table "public"."group_users" to "service_role";

grant select on table "public"."group_users" to "service_role";

grant trigger on table "public"."group_users" to "service_role";

grant truncate on table "public"."group_users" to "service_role";

grant update on table "public"."group_users" to "service_role";

grant delete on table "public"."log" to "anon";

grant insert on table "public"."log" to "anon";

grant references on table "public"."log" to "anon";

grant select on table "public"."log" to "anon";

grant trigger on table "public"."log" to "anon";

grant truncate on table "public"."log" to "anon";

grant update on table "public"."log" to "anon";

grant delete on table "public"."log" to "authenticated";

grant insert on table "public"."log" to "authenticated";

grant references on table "public"."log" to "authenticated";

grant select on table "public"."log" to "authenticated";

grant trigger on table "public"."log" to "authenticated";

grant truncate on table "public"."log" to "authenticated";

grant update on table "public"."log" to "authenticated";

grant delete on table "public"."log" to "service_role";

grant insert on table "public"."log" to "service_role";

grant references on table "public"."log" to "service_role";

grant select on table "public"."log" to "service_role";

grant trigger on table "public"."log" to "service_role";

grant truncate on table "public"."log" to "service_role";

grant update on table "public"."log" to "service_role";

grant delete on table "public"."user" to "anon";

grant insert on table "public"."user" to "anon";

grant references on table "public"."user" to "anon";

grant select on table "public"."user" to "anon";

grant trigger on table "public"."user" to "anon";

grant truncate on table "public"."user" to "anon";

grant update on table "public"."user" to "anon";

grant delete on table "public"."user" to "authenticated";

grant insert on table "public"."user" to "authenticated";

grant references on table "public"."user" to "authenticated";

grant select on table "public"."user" to "authenticated";

grant trigger on table "public"."user" to "authenticated";

grant truncate on table "public"."user" to "authenticated";

grant update on table "public"."user" to "authenticated";

grant delete on table "public"."user" to "service_role";

grant insert on table "public"."user" to "service_role";

grant references on table "public"."user" to "service_role";

grant select on table "public"."user" to "service_role";

grant trigger on table "public"."user" to "service_role";

grant truncate on table "public"."user" to "service_role";

grant update on table "public"."user" to "service_role";

create policy "Enable read access for all users"
on "public"."group"
as permissive
for all
to public
using (true);


create policy "Enable read access for all users"
on "public"."group_users"
as permissive
for all
to public
using (true);


create policy "Enable read access for all users"
on "public"."log"
as permissive
for all
to public
using (true);


create policy "Enable read access for all users"
on "public"."user"
as permissive
for all
to public
using (true);



